name: Unittests and Push Docker Images

on:
  push:
    branches:
      - master
      - develop
      - feature/*
    tags:
      - v*
env:
  # Image name
  IMAGE_NAME: ml_bots_base
  IMAGE_ID: ghcr.io/${{ github.repository_owner }}/ml_bots_base
jobs:
  # RUN UNIT TESTS
  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build docker image
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
        run: |
          echo $IMAGE_ID >> ./dockerfiles/.env
          docker-compose --file ./dockerfiles/docker-compose.test.yml up -d

      - name: Test with pytest
        run: |
          docker exec $IMAGE_NAME ls
          docker exec $IMAGE_NAME pytest ./src/tests
  # PUSH IMAGE
  push:
    # Trigger when unit tests are completed.
    needs: unittest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build docker image
        run: docker-compose --file ./dockerfiles/docker-compose.yml up -d

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Push image of master branch to GitHub Container Registry
        if: "contains( github.ref , 'master')"
        # Store the container ID with ``(back quart).
        run: |
          CURIMAGE_ID=`docker ps -aqf "name=$IMAGE_NAME"`
          echo $CURIMAGE_ID
          docker images
          docker tag $CURIMAGE_ID $IMAGE_ID:latest
          docker images
          docker push $IMAGE_ID:latest

      - name: Push image of develop or feature branch to GitHub Container Registry
        if: "!contains( github.ref , 'master')"
        run: |
          CURIMAGE_ID=`docker ps -aqf "name=$IMAGE_NAME"`
          docker tag $CURIMAGE_ID $IMAGE_ID:${{ github.sha }}
          docker push $IMAGE_ID:${{ github.sha }}

